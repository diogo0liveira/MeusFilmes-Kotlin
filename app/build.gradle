apply plugin: 'com.android.application'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        versionCode 1
        versionName "1.0"
        applicationId "com.diogo.oliveira.mymovies"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.diogo.oliveira.mymovies.TestAndroidJUnitRunner"
        buildConfigField 'String', 'THEMOVIEDB_API_KEY', keystoreProperties['THEMOVIEDB_API_KEY']
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        animationsDisabled = true
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
//    debugImplementation files('libs/SQLiteStudioRemote.jar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-sqlite:$anko_version"

    implementation project(':common')
    implementation project(':design')

    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayoutVersion"

    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3LoggingVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerAndroidVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerAndroidVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerAndroidVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"

    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"

    androidTestImplementation "androidx.test.ext:junit:$extJunitVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoCoreVersion"

    androidTestImplementation("com.jakewharton.espresso:okhttp3-idling-resource:1.0.0") {
        exclude group: 'androidx.test.espresso', module: 'espresso-idling-resource'
    }
}
